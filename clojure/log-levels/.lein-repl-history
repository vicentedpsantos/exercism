(split "[ERROR]: Invalid operation")
(clojure.string/split "[ERROR]: Invalid operation")
(clojure.string/split "[ERROR]: Invalid operation" ":")
(clojure.string/split "[ERROR]: Invalid operation" #":")
(split "[ERROR]: Invalid operation" #":")
(clojure.string/trim (clojure.string/split "[ERROR]: Invalid operation" #":"))
(split "[ERROR]: Invalid operation" #":")
(clojure.string/split "[ERROR]: Invalid operation" #":")
(trim " eae ")
(clojure.string/trim " eae ")
(map (clojure.string/split "[ERROR]: Invalid operation" #":") clojure.string/trim)
(dorun (map (clojure.string/split "[ERROR]: Invalid operation" #":") clojure.string/trim))
(apply (clojure.string/split "[ERROR]: Invalid operation" #":") clojure.string/trim)
(clojure.string/split "[ERROR]: Invalid operation" #":")
(fst (clojure.string/split "[ERROR]: Invalid operation" #":"))
(nth (clojure.string/split "[ERROR]: Invalid operation" #":") 0)
(clojure.string/split "[ERROR]: Invalid operation" #":")
(map (clojure.string/split "[ERROR]: Invalid operation" #":") clojure.string/trim)
(map clojure.string/trim (clojure.string/split "[ERROR]: Invalid operation" #":"))
(snd (map clojure.string/trim (clojure.string/split "[ERROR]: Invalid operation" #":")))
(second (map clojure.string/trim (clojure.string/split "[ERROR]: Invalid operation" #":")))
(clojure.string/replace "[ERROR]" #"[\[\]]" "")
