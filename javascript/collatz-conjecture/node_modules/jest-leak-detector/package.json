{
  "_args": [
    [
      {
        "raw": "jest-leak-detector@^25.5.0",
        "scope": null,
        "escapedName": "jest-leak-detector",
        "name": "jest-leak-detector",
        "rawSpec": "^25.5.0",
        "spec": ">=25.5.0 <26.0.0",
        "type": "range"
      },
      "/home/vicentesantos/exercism/javascript/collatz-conjecture/node_modules/jest-runner"
    ]
  ],
  "_from": "jest-leak-detector@^25.5.0",
  "_hasShrinkwrap": false,
  "_id": "jest-leak-detector@25.5.0",
  "_location": "/jest-leak-detector",
  "_nodeVersion": "12.16.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/jest-leak-detector_25.5.0_1588103127132_0.6022272457411171"
  },
  "_npmUser": {
    "name": "simenb",
    "email": "sbekkhus91@gmail.com"
  },
  "_npmVersion": "lerna/3.20.2/node@v12.16.1+x64 (darwin)",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jest-leak-detector@^25.5.0",
    "scope": null,
    "escapedName": "jest-leak-detector",
    "name": "jest-leak-detector",
    "rawSpec": "^25.5.0",
    "spec": ">=25.5.0 <26.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/jest-runner"
  ],
  "_resolved": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-25.5.0.tgz",
  "_shasum": "2291c6294b0ce404241bb56fe60e2d0c3e34f0bb",
  "_shrinkwrap": null,
  "_spec": "jest-leak-detector@^25.5.0",
  "_where": "/home/vicentesantos/exercism/javascript/collatz-conjecture/node_modules/jest-runner",
  "bugs": {
    "url": "https://github.com/facebook/jest/issues"
  },
  "dependencies": {
    "jest-get-type": "^25.2.6",
    "pretty-format": "^25.5.0"
  },
  "description": "Module for verifying whether an object has been garbage collected or not.",
  "devDependencies": {
    "@types/weak-napi": "^1.0.0",
    "weak-napi": "^1.0.3"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-rV7JdLsanS8OkdDpZtgBf61L5xZ4NnYLBq72r6ldxahJWWczZjXawRsoHyXzibM5ed7C2QRjpp6ypgwGdKyoVA==",
    "shasum": "2291c6294b0ce404241bb56fe60e2d0c3e34f0bb",
    "tarball": "https://registry.npmjs.org/jest-leak-detector/-/jest-leak-detector-25.5.0.tgz",
    "fileCount": 6,
    "unpackedSize": 5849,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJeqIfXCRA9TVsSAnZWagAA22wP/1Ok1A5v6JXL5c6L0Qok\nzQX6XO8D/258s7TXgGk2W3PjoEJUYcDGbr1gqwj7yUziSomkdeoAF/I0nyO5\nfHNmRXaPI1h4OkJqkz+8sZruNwMQ0SrpS4cJTr0PCsRNerl4OV/Il3UZsbNS\n3p8xAdTb5Aqx1+jnD94TXgdp3hRsQTfoVowZZW5eezskIY3yNGtzHwsnWwJo\nQOHhapwpFCgaY4XuZpHRG+dmv/qHoR8qc9vRAcCyApZrOJY+sP4Ep2tBEVNi\nb7Eofdb8iRTn/SuvMfMKeFZrNXCbt9XVlvASLdBv58RKLWHaW3UYbAOkBYZn\nd7Ue20yl/242kc8O/SUeI4+Xpbp9QnCeVWhm55jfV6dz5Ju9xic9YfljZCuj\nxkO/zhQ85xspjpdQ4fKniJWsaVvdIwKWsYeNOoDIVi1vpKhs5+K5rmQg+3Kn\nJxWoO03kPEpgFVVg/0Lpwb+di7q2NoOzsxReRyIykEMxcBOebn8Cxw93CC5O\nnPCJk3KsLO2KMjrehf2mPRHHmu4Vi6wTcsLaHyCAnYa8UqtsD/kDA5kUpLmQ\nEQD7jIdKsymwkLl/4MeIPSrB/Z0GOWH5B7FjgiE+YISUnuCaF8PCSiqtBP76\nA4PjzPAZgW/ndxKsWhtun3s5RvQa1NfqhpIOL6J41Mo8qYOz9+TqV85N7V+g\nap0E\r\n=GzOr\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "engines": {
    "node": ">= 8.3"
  },
  "gitHead": "ddd73d18adfb982b9b0d94bad7d41c9f78567ca7",
  "homepage": "https://github.com/facebook/jest#readme",
  "license": "MIT",
  "main": "build/index.js",
  "maintainers": [
    {
      "name": "cpojer",
      "email": "christoph.pojer@gmail.com"
    },
    {
      "name": "davidzilburg",
      "email": "davidzilburg@gmail.com"
    },
    {
      "name": "fb",
      "email": "opensource+npm@fb.com"
    },
    {
      "name": "rubennorte",
      "email": "rubennorte@gmail.com"
    },
    {
      "name": "scotthovestadt",
      "email": "scott.hovestadt@gmail.com"
    },
    {
      "name": "simenb",
      "email": "sbekkhus91@gmail.com"
    }
  ],
  "name": "jest-leak-detector",
  "optionalDependencies": {},
  "publishConfig": {
    "access": "public"
  },
  "readme": "# jest-leak-detector\n\nModule for verifying whether an object has been garbage collected or not.\n\nInternally creates a weak reference to the object, and forces garbage collection to happen. If the reference is gone, it meant no one else was pointing to the object.\n\n## Example\n\n```javascript\n(async function () {\n  let reference = {};\n  let isLeaking;\n\n  const detector = new LeakDetector(reference);\n\n  // Reference is held in memory.\n  isLeaking = await detector.isLeaking();\n  console.log(isLeaking); // true\n\n  // We destroy the only reference to the object.\n  reference = null;\n\n  // Reference is gone.\n  isLeaking = await detector.isLeaking();\n  console.log(isLeaking); // false\n})();\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/facebook/jest.git",
    "directory": "packages/jest-leak-detector"
  },
  "types": "build/index.d.ts",
  "typesVersions": {
    "<3.8": {
      "build/*": [
        "build/ts3.4/*"
      ]
    }
  },
  "version": "25.5.0"
}
